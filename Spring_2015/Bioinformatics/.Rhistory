opts_chunk$set(fig.align="center", fig.height=4, fig.width=5)
library(ggplot2)
theme_set(theme_bw(base_size=12))
```
plot(s$d, s$v)
plot(s$u, s$v)
s$u # left singular vectors
s$v # right singular vectors
C <- B %*% t(B)
C
s$u # left singular vectors
t(B)
B
s$u # left singular vectors
s$u[0] # left singular vectors
s$u$1 # left singular vectors
s$u # left singular vectors
plot(s$u, s$v)
s$u # left singular vectors
s$v # right singular vectors
B
norm(A)
norm_vec(A)
B <- t(t(A)/colSums(A))
sweep(A, 2, colSums(A), FUN="/")
scale(A, center=FALSE, scale=colSums(A))
sweep(A, 2, colSums(A), FUN="/")
scale(A, center=FALSE, scale=colSums(A)^2)
sweep(A, 2, colSums(A), FUN="/")
sweep(A, 2, colSums(A)^2, FUN="/")
sweep(A, 2, colSums(A)/^2, FUN="/")
sweep(A, 2, sqrt(colSums(A)), FUN="/")
B <- t(t(A)/sqrt(colSums(A)))
B <- t(t(A)/sqrt(colSums(A)))
B
t(B)
C <- B %*% t(B)
C
s <- svd(B)
s$d # singular values
s$u # left singular vectors
s$v # right singular vectors
```
s$u # left singular vectors
s$v # right singular vectors
s$u[1,]
s$u[c(1,2),]
s$u[c(1,2),]
s$v[c(1,2),]
first <- s$u[c(1,2),]
second <- s$v[c(1,2),]
plot(first,second)
s$u[1,]
first %*% B[1,]
B[1,]
first <- s$u[1,]
second <- s$u[2,]
first %*% B[1,]
first %*% B[c(1,2),]
first %*% B[c(1),]
left <- s$u[c(1,2),]
right <- s$v[c(1,2),]
plot(first,right()
first %*% B[c(1),]
plot(first,right)
plot(left,right)
left <- s$u[c(1,2),]
right <- s$v[c(1,2),]
plot(left,right)
first <- s$u[1,]
second <- s$u[2,]
first %*% B[c(1),]
for (i in 1:nrow(B)){
print i
}
for (i in 1:11){
print i
first %*% B[i,]
}
for (i in 1:11){
first %*% B[i,]
}
for (i in 1:11){
print(first %*% B[i,])
}
first_left <- first %*% B[1,]
first_left <- first %*% B[1,]
for (i in 2:11){
append(first_left, first %*% B[i,])
}
first_left
first_left <- first %*% B[1,]
first_left
for (i in 2:11){
append(first_left, first %*% B[i,])
}
first_left
print(first_left, first %*% B[i,])
for (i in 2:11){
print(first_left, first %*% B[i,])
}
B
t(B)
C <- B %*% t(B)
C
s <- svd(B)
s$d # singular values
s$u # left singular vectors
s$v # right singular vectors
left <- s$u[c(1,2),]
right <- s$v[c(1,2),]
plot(left,right)
first <- s$u[1,]
second <- s$u[2,]
first %*% B[c(1),]
first_left <- first %*% B[1,]
for (i in 2:11){
print(first_left, first %*% B[i,])
}
for (i in 1:11){
print(first_left, first %*% B[i,])
}
print(first %*% B[i,])
for (i in 1:11){
print(first %*% B[i,])
}
first_left <- first %*% B[1,]
for (i in 2:11){
first_left <- append(first_left, first %*% B[i,])
}
first_left
second_left <- second %*% B[1,]
for (i in 2:11){
second_left <- append(second_left, second %*% B[i,])
}
plot(first_left, second_left)
first %*% A[c(1),]
first_left <- first %*% A[1,]
for (i in 2:11){
first_left <- append(first_left, first %*% A[i,])
}
second_left <- second %*% A[1,]
for (i in 2:11){
second_left <- append(second_left, second %*% A[i,])
}
plot(first_left, second_left)
```
first_left <- first %*% A[,1]
for (i in 2:11){
first_left <- append(first_left, first %*% A[,i])
}
second_left <- second %*% A[,1]
for (i in 2:11){
A[,1]
A[,1]
dfs
a
afgsagmar[gg]
]]]
A[1,]
A[0,1]
A[,1]
A[,1]
first_left <- first %*% A[,1]
first
A[,1]
first <- s$v[1,]
second <- s$v[2,]
first
s$v # right singular vectors
s$u # left singular vectors
A
left <- s$u[c(1,2),]
s$u # left singular vectors
first <- s$u[,1]
second <- s$u[,2]
first %*% A[c(1),]
first
first_left <- first %*% A[,1]
for (i in 2:11){
first_left <- append(first_left, first %*% A[,i])
}
s <- svd(B)
s$d # singular values
s$u # left singular vectors
s$v # right singular vectors
left <- s$u[c(1,2),]
right <- s$v[c(1,2),]
plot(left,right)
first <- s$u[,1]
second <- s$u[,2]
first_left <- first %*% A[,1]
for (i in 2:10){
first_left <- append(first_left, first %*% A[,i])
}
second_left <- second %*% A[,1]
for (i in 2:10){
second_left <- append(second_left, second %*% A[,i])
}
plot(first_left, second_left)
first <- s$v[1,]
second <- s$v[2,]
first
s$v # right singular vectors
first <- s$v[1,]
second <- s$v[2,]
first_right <- first %*% A[1,]
for (i in 2:11){
first_right <- append(first_right, first %*% A[i,])
}
second_left <- second %*% A[1,]
for (i in 2:11){
second_right <- append(second_right, second %*% A[i,])
}
plot(first_right, second_right)
```
You can also embed plots, for example:
```{r, echo=FALSE}
```
Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
plot(first_right, second_right)
plot(first_left, second_left)
first <- s$v[1,]
second <- s$v[2,]
first_right <- first %*% A[1,]
for (i in 2:11){
first_right <- append(first_right, first %*% A[i,])
}
second_left <- second %*% A[1,]
for (i in 2:11){
second_right <- append(second_right, second %*% A[i,])
}
second_right <- second %*% A[1,]
for (i in 2:11){
second_right <- append(second_right, second %*% A[i,])
}
plot(first_right, second_right)
```
first_right <- first %*% A[1,]/sqrt(sum(A[1,]^2))
first <- s$v[1,]
second <- s$v[2,]
first_right <- first %*% A[1,]/sqrt(sum(A[1,]^2))
for (i in 2:11){
first_right <- append(first_right, first %*% A[i,])
}
second_right <- second %*% A[1,]
first_right <- first %*% A[1,]/norm(A[1,],type="F")
]
first_right <- first %*% A[1,]/norm(A[1,],type="F")
A
A[1]
A[1,]
first_right <- first %*% A[1,]/norm(t(A[1,]),type="F")
first <- s$v[1,]
second <- s$v[2,]
first_right <- first %*% A[1,]/norm(t(A[1,]),type="F")
for (i in 2:11){
first_right <- append(first_right, first %*% A[i,]/norm(t(A[i,]),type="F")
}
second_right <- second %*% A[1,]/norm(t(A[1,]),type="F"
for (i in 2:11){
first <- s$v[1,]
second <- s$v[2,]
first_right <- first %*% A[1,]/norm(t(A[1,]),type="F")
for (i in 2:11){
first_right <- append(first_right, first %*% A[i,]/norm(t(A[i,]),type="F"))
}
second_right <- second %*% A[1,]/norm(t(A[1,]),type="F"
for (i in 2:11){
second_right <- append(second_right, second %*% A[i,]/norm(t(A[i,]),type="F"))
second_right <- second %*% A[1,]/norm(t(A[1,]),type="F")
for (i in 2:11){
second_right <- append(second_right, second %*% A[i,]/norm(t(A[i,]),type="F"))
}
plot(first_right, second_right)
```
first <- s$u[,1]
second <- s$u[,2]
first_left <- first %*% A[,1]/norm(A[,1],type="F")
for (i in 2:10){
first_left <- append(first_left, first %*% A[,i]/norm(A[,i],type="F"))
first_left <- first %*% A[,1]/norm(A[,1],type="F")
for (i in 2:10){
first_left <- append(first_left, first %*% A[,i]/norm(A[,i],type="F"))
}
second_left <- second %*% A[,1]/norm(A[,1],type="F")
for (i in 2:10){
second_left <- append(second_left, second %*% A[,i]/norm(A[,i],type="F"))
}
plot(first_left, second_left)
first <- s$u[,1]
second <- s$u[,2]
first_left <- first %*% A[,1]/norm(A[,1],type="F")
for (i in 2:10){
first_left <- append(first_left, first %*% A[,i]/norm(A[,i],type="F"))
}
second_left <- second %*% A[,1]/norm(A[,1],type="F")
for (i in 2:10){
second_left <- append(second_left, second %*% A[,i]/norm(A[,i],type="F"))
}
plot(first_left, second_left)
first <- s$v[1,]
second <- s$v[2,]
first_right <- first %*% A[1,]/norm(t(A[1,]),type="F")
for (i in 2:11){
first_right <- append(first_right, first %*% A[i,]/norm(t(A[i,]),type="F"))
}
second_right <- second %*% A[1,]/norm(t(A[1,]),type="F")
for (i in 2:11){
second_right <- append(second_right, second %*% A[i,]/norm(t(A[i,]),type="F"))
}
plot(first_right, second_right)
```{r global_options, include=FALSE}
library(knitr)
opts_chunk$set(fig.align="center", fig.height=4, fig.width=5)
library(ggplot2)
theme_set(theme_bw(base_size=12))
```
---
title: "HW4"
A_1 = matrix(c(1,0,0,1,1,0,0,0,0,0), nrow=1, ncol=10)
A_2 = matrix(c(1,1,0,0,0,0,0,0,0,0), nrow=1, ncol=10)
A_3 = matrix(c(1,1,1,0,0,0,0,0,0,0), nrow=1, ncol=10)
A_4 = matrix(c(0,1,0,1,0,0,0,0,0,0), nrow=1, ncol=10)
A_5 = matrix(c(0,1,0,1,1,0,0,0,0,0), nrow=1, ncol=10)
A_6 = matrix(c(0,0,1,0,1,0,0,0,0,0), nrow=1, ncol=10)
A_7 = matrix(c(0,0,1,0,0,0,0,0,0,1), nrow=1, ncol=10)
A_8 = matrix(c(0,0,0,0,0,1,1,1,1,0), nrow=1, ncol=10)
A_9 = matrix(c(0,0,0,0,0,0,1,1,0,0), nrow=1, ncol=10)
A_10 = matrix(c(0,0,0,0,0,0,0,1,1,1), nrow=1, ncol=10)
A_11 = matrix(c(0,0,0,0,0,1,0,0,0,0), nrow=1, ncol=10)
A <- rbind(A_1,A_2,A_3,A_4,A_5,A_6,A_7,A_8,A_9,A_10,A_11)
A[1,]
B <- t(t(A)/sqrt(colSums(A)))
B
t(B)
C <- B %*% t(B)
C
s <- svd(B)
s$d # singular values
s$u # left singular vectors
s$v # right singular vectors
left <- s$u[c(1,2),]
right <- s$v[c(1,2),]
plot(left,right)
first <- s$u[,1]
second <- s$u[,2]
first_left <- first %*% A[,1]/norm(A[,1],type="F")
for (i in 2:10){
first_left <- append(first_left, first %*% A[,i]/norm(A[,i],type="F"))
}
second_left <- second %*% A[,1]/norm(A[,1],type="F")
for (i in 2:10){
second_left <- append(second_left, second %*% A[,i]/norm(A[,i],type="F"))
first_left <- first %*% A[,1]/norm(t(A[,1]),type="F")
}
first_left <- first %*% A[,1]/norm(t(A[,1]),type="F")
first_left <- first %*% A[,1]/norm(A[,1],type="F")
first <- s$u[,1]
second <- s$u[,2]
first_left <- first %*% A[,1]/norm(t(A[,1]),type="F")
for (i in 2:10){
first_left <- append(first_left, first %*% A[,i]/norm(t(A[,i]),type="F"))
}
second_left <- second %*% A[,1]/norm(t(A[,1]),type="F")
for (i in 2:10){
second_left <- append(second_left, second %*% A[,i]/norm(t(A[,i]),type="F"))
}
plot(first_left, second_left)
left <- s$u[c(1,2),]
right <- s$v[c(1,2),]
left <- s$u[c(1,2),]
right <- s$v[c(1,2),]
plot(left,right)
s$u # left singular vectors
s$v # right singular vectors
plot(left)
left <- s$u[c(1,2),]
left
plot(left, type="p")
left <- s$u[c(1,2),]
left
plot(left, type="p")
left
plot(c(1,10),left)
plot(c(1,11),left)
plot(c(1,10),left)
left
plot(r(1,10),left)
plot(c(1,10),left)
plot(1:10,left)
plot(1:11,left)
plot(1:10,left)
plot(rbind(1:10),left)
plot(t(c(1,10)),left)
plot(t(c(1,11)),left)
left
plot(t(c(1,11)),left[1,])
plot(c(1,10),left[1,])
left[1,]
plot(t(c(1,10)),left[1,])
plot(left[1,])
plot(left[2,])
plot(left[1,])
plot(left[2,])
plot(right[1,])
plot(right[1,])
plot(right[2,])
plot(right[1,])
plot(right[2,])
first_left <- first %*% A[,1]/norm(t(A[,1]),type="F")
for (i in 2:10){
W
)
}
}d
){}sd
fsdfasd
fs}}}\\
}
sdf
WWWusage
?WWWusage
?sleep
?airmay
?education
dataset
datasets
?datasets
?boot
?airmiles
?crimtab
?precip
?USPersonalExpenditure
head(USPersonalExpenditure)
USPersonalExpenditure
head(longley)
?longley
data(Males)
install.packages("plm")
?Males
data(Males)
plm
library("plm")
library(plm)
Males
plm
?plm
?Males
head(Males)
?Males
Males
plm.Males
data(Males)
Males
head(Males)
head(pima_full)
library(knitr)
opts_chunk$set(fig.align="center", fig.height=4, fig.width=5)
library(ggplot2)
theme_set(theme_bw(base_size=12))
library(dplyr)
library(tidyr)
library(grid)
# Dataset to use specificallyfor training in Part 1
pima_training <- read.csv("http://wilkelab.org/classes/SDS348/2015_spring_projects/project2/pima_training.csv")
# Dataset to use specifically for testing your model in Part 1
pima_test <- read.csv("http://wilkelab.org/classes/SDS348/2015_spring_projects/project2/pima_test.csv")
##### Use this dataset for part 2 (described below) #####
# Complete Pima data, with a single observation per individual
pima_full <- read.csv("http://wilkelab.org/classes/SDS348/2015_spring_projects/project2/pima.csv")
head(pima_full)
?pima_full
head(Males)
max(Males$wage)
max(Male$year)
max(Males$year)
min(Males$year)
max(school)
max(Males$school)
min(Males$school)
max(Males$exper)
min(Males$exper)
head(ebola)
ebola %>% spread(Indicator, Value) %>% select(Country, Date, all_Ebola_deaths) %>% group_by(Country) %>% filter(all_Ebola_deaths > 20) -> test_ebola
head(test_ebola)
ggplot(test_ebola, aes(x=Date, y=all_Ebola_deaths, color = Country)) + geom_point() + geom_smooth(aes(group=Country), method=lm, se=F)
?Males
head(Males)
ebola %>% spread(Indicator, Value) %>% select(Country, Date, all_Ebola_deaths) %>% group_by(Country) %>% filter(all_Ebola_deaths > 20) -> test_ebola
head(test_ebola)
ggplot(test_ebola, aes(x=Date, y=all_Ebola_deaths, color = Country)) + geom_point() + geom_smooth(aes(group=Country), method=lm, se=F)
```
setwd(/Users/manavm/Documents/Git/Classes/Spring_2015)
setwd("/Users/manavm/Documents/Git/Classes/Spring_2015")
setwd("/Users/manavm/Documents/Git/Classes/Spring_2015/Bioinformatics/")
ecoli <- read.csv(file="Ecoli_K12.csv",head=TRUE,sep=",")
ecoli
ggplot(ecoli, aes(x=ecoli$Codon, y=ecoli$Occurances)) + geom_bar(stat="identity")
```{r global_options, include=FALSE}
opts_chunk$set(fig.align="center", fig.height=6, fig.width=6)
library(ggplot2)
theme_set(theme_bw(base_size=12))
```{r global_options, include=FALSE}
opts_chunk$set(fig.align="center", fig.height=6, fig.width=6)
```{r global_options, include=FALSE}
library(ggplot2)
theme_set(theme_bw(base_size=12))
ecoli <- read.csv(file="Ecoli_K12.csv",head=TRUE,sep=",")
ecoli
ggplot(ecoli, aes(x=ecoli$Codon, y=ecoli$Occurances)) + geom_bar(stat="identity")
ggplot(ecoli, aes(x=Codon, y=Occurances)) + geom_bar(stat="identity")
